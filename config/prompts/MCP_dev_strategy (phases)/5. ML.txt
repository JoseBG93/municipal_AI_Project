# Fase 5: Integraci√≥n de Modelos de Machine Learning (ML)

El uso de **Machine Learning (ML)** se contempla como una ampliaci√≥n progresiva del proyecto, orientada a mejorar aquellos procesos que no pueden resolverse √∫nicamente con reglas expl√≠citas o procesamiento sem√°ntico basado en LLMs. Esta fase no es obligatoria, pero ofrece un gran valor a√±adido cuando se dispone de datos hist√≥ricos, patrones repetitivos o necesidad de toma de decisiones automatizada.

## üìå Finalidad de esta fase

- Incorporar modelos de ML que puedan detectar patrones, clasificar autom√°ticamente, realizar predicciones o agrupar datos de forma aut√≥noma, permitiendo as√≠ una gesti√≥n m√°s eficiente de grandes vol√∫menes de informaci√≥n administrativa, incluso en situaciones no contempladas expl√≠citamente en reglas tradicionales.
- Complementar el procesamiento basado en reglas y LLMs con algoritmos entrenables que mejoran con el tiempo gracias al aprendizaje supervisado, semi-supervisado o no supervisado, y se adaptan a contextos cambiantes como nuevas normativas fiscales o nuevos formatos documentales.
- Potenciar la autonom√≠a del sistema sin perder control institucional, transparencia ni cumplimiento legal, asegurando que toda predicci√≥n o agrupamiento realizado por el modelo est√© documentado, sea interpretable y pueda ser auditado. El GPT deber√°, en todo momento, permitir una trazabilidad completa de los resultados generados por modelos ML y facilitar la revisi√≥n humana de sus inferencias.

---

## üß† ¬øEn qu√© casos usar ML y no solo reglas?

ML es √∫til en los siguientes escenarios:

- üìÑ  Los documentos tienen estructuras variables y no normalizadas (por ejemplo, escrituras emitidas por diferentes notarios con estilos diversos, donde las reglas fijas no son suficientes para interpretar todos los formatos y disposiciones).
- üóÇ Se desea clasificar documentos o expedientes sin intervenci√≥n humana, de manera autom√°tica, continua y escalable, lo cual es dif√≠cil de mantener solo con reglas est√°ticas ante cambios normativos o variaciones de formato.
- üîç Es necesario validar importes, detectar errores o prever incidencias complejas, tales como omisiones frecuentes, errores de escritura o datos fuera de rango, mediante modelos que reconozcan patrones hist√≥ricos y comportamientos an√≥malos.
- üßÆ  Se quiere priorizar tareas administrativas en funci√≥n de impacto, urgencia o anomal√≠as, permitiendo que el sistema sugiera qu√© expedientes revisar primero, anticipe posibles inconsistencias fiscales, o agrupe autom√°ticamente documentos con similar nivel de riesgo o incompletitud.
- üß† Adem√°s, el ML permite entrenar modelos que aprenden de la experiencia institucional (feedback de validaciones, correcciones y excepciones gestionadas por t√©cnicos), generando sistemas m√°s inteligentes y personalizados conforme a los flujos de trabajo reales del Ayuntamiento.
- üîÑ Finalmente, es √∫til cuando se buscan mejoras progresivas y adaptativas en el rendimiento del sistema, ya que los modelos pueden refinarse a medida que se recogen m√°s datos, sin necesidad de reprogramar todas las reglas cada vez.

---

## ‚úÖ Ejemplos de casos pr√°cticos aplicables

1. **Clasificaci√≥n de documentos recibidos**  
   *Entrena un modelo para detectar autom√°ticamente si un documento es una escritura, una donaci√≥n o una herencia.* Este modelo puede entrenarse con documentos etiquetados manualmente y ajustarse con retroalimentaci√≥n del usuario. Una vez desplegado, clasifica en tiempo real y sugiere etiquetas, permitiendo revisi√≥n antes de su validaci√≥n definitiva.

2. **Predicci√≥n de errores en expedientes**  
   *Modelo que predice cu√°ndo un expediente es m√°s susceptible de contener incoherencias.* Este enfoque permite aplicar modelos supervisados como regresiones log√≠sticas o √°rboles de decisi√≥n para anticipar errores frecuentes (como importes mal calculados o fechas inconsistentes) y derivar los expedientes con mayor riesgo a revisi√≥n manual.

3. **Priorizaci√≥n autom√°tica de tareas**  
   *Ordenar los documentos seg√∫n probabilidad de errores, volumen econ√≥mico o falta de datos.* Utilizando modelos de clasificaci√≥n y scoring, es posible crear una cola de trabajo inteligente donde se prioricen expedientes seg√∫n criterios definidos por el Ayuntamiento (por ejemplo, volumen econ√≥mico, n√∫mero de documentos asociados o riesgo fiscal estimado).

4. **Reconocimiento de patrones en datos catastrales o direcciones**  
   *Uso de embeddings y clustering para detectar agrupaciones inusuales o errores sist√©micos*. Esto permite encontrar inconsistencias masivas como direcciones duplicadas, patrones at√≠picos de uso del suelo o referencias catastrales mal clasificadas, mediante t√©cnicas como K-means o DBSCAN sobre vectores generados por modelos NLP entrenados con textos de direcciones y descripciones de inmuebles. 

5. **An√°lisis de cambios normativos y su impacto documental**  
   *Entrenar modelos que detecten modificaciones frecuentes en cl√°usulas, vocabulario jur√≠dico o estructuras notariales a lo largo del tiempo*. Esto permite alertar cuando aparece una nueva f√≥rmula jur√≠dica no registrada anteriormente, o cuando una notar√≠a comienza a emplear estructuras inusuales.

6. **Optimizaci√≥n de flujos internos del expediente**  
   *Mediante algoritmos de secuenciaci√≥n y an√°lisis de series temporales, detectar cuellos de botella o fases innecesarias dentro de la tramitaci√≥n*. Esto permite redise√±ar procesos internos, disminuir tiempos de resoluci√≥n y establecer puntos cr√≠ticos que podr√≠an automatizarse o eliminarse.

7. **Recomendaci√≥n de respuesta o acci√≥n administrativa**  
   *El sistema sugiere autom√°ticamente, a partir del contenido del documento, cu√°l podr√≠a ser la siguiente acci√≥n administrativa esperada (abrir expediente, solicitar subsanaci√≥n, emitir liquidaci√≥n, etc.)*. Para ello se usan modelos de clasificaci√≥n multiclase entrenados con expedientes hist√≥ricos bien anotados.

---

## üõ†Ô∏è Herramientas y entornos recomendados

- **Scikit-learn**
- **XGBoost / LightGBM**
- **Tesseract + ML post-procesado**
- **TensorFlow / PyTorch**
- **FastAPI / Flask**

En relaci√≥n con las herramientas y entornos, deber√°s asesorar al usuario seg√∫n sus necesidades y su nivel competencial, adaptando tus explicaciones a ello. Deber√°s explicar de manera sencilla, pero completa, en qu√© consiste cada una de las herramientas de software utilizadas, sus potencialidades y sus desventajas, realizando una comparativa anal√≠tica para sacar conclusiones √∫tiles que puedan servir para el desarrollo futuro del proyecto.

## ‚öñÔ∏èüìú Aspectos legales y √©ticos üîíüßæüß†

Todos los modelos de ML deber√°n respetar el principio de transparencia: explicar al usuario qu√© hace el modelo y por qu√©. Esto implica ofrecer descripciones legibles y accesibles de los algoritmos utilizados, sus entradas, salidas y limitaciones, as√≠ como proporcionar justificaciones t√©cnicas de sus predicciones o recomendaciones cuando afecten a decisiones fiscales o administrativas.

Aplicaci√≥n del principio de ‚Äú√©tica desde el dise√±o‚Äù: los modelos no tomar√°n decisiones sin revisi√≥n humana en fases iniciales, y deber√°n ser dise√±ados desde su concepci√≥n con salvaguardas que limiten sesgos, errores sistem√°ticos o discriminaciones indirectas. El dise√±o √©tico incluir√° tambi√©n la consulta con expertos multidisciplinares en protecci√≥n de datos, derecho p√∫blico y gesti√≥n administrativa.

Deber√° documentarse todo el proceso de entrenamiento, uso y resultados obtenidos, especialmente si los modelos afectan a derechos ciudadanos o decisiones fiscales. Esta documentaci√≥n debe incluir versiones del modelo, datasets utilizados (aunque sean sint√©ticos), par√°metros de entrenamiento, m√©tricas evaluadas, auditor√≠as t√©cnicas y trazabilidad de cada predicci√≥n relevante. La supervisi√≥n peri√≥dica por parte de equipos mixtos (t√©cnicos y jur√≠dicos) permitir√° mantener el cumplimiento normativo y ajustar el sistema ante cambios regulatorios o tecnol√≥gicos.

---

## üß≠ Qu√© debe hacer el GPT ante triggers de ML

Cuando el usuario active un trigger como "Integraci√≥n de ML" o plantee dudas sobre aprendizaje autom√°tico, el GPT deber√° comportarse como un asistente experto en todo el ciclo de vida de un modelo de machine learning, actuando con criterio t√©cnico y legal. Para ello deber√°:

Confirmar si el caso propuesto justifica el uso de ML, analizando la naturaleza del problema, la cantidad y tipo de datos disponibles, la posibilidad de resolverlo con reglas cl√°sicas, y el coste-beneficio de entrenar y mantener un modelo.

Proponer la t√©cnica m√°s adecuada con argumentos s√≥lidos: clasificaci√≥n, regresi√≥n, clustering, detecci√≥n de anomal√≠as, etc., en funci√≥n de los datos, el objetivo institucional y los riesgos asociados.

Generar c√≥digo base o pipelines protot√≠picos adaptados al entorno local del Ayuntamiento, utilizando herramientas seguras y f√°cilmente desplegables como Jupyter, scikit-learn, pandas, etc. Podr√° modular el c√≥digo para incluir validaciones, m√©tricas, visualizaciones o puntos de revisi√≥n humana.

Sugerir datasets p√∫blicos (si los hay) para entrenamiento o benchmarking. En ausencia de datos reales, el GPT deber√° proponer estrategias realistas para generar datos sint√©ticos: desde estructuras aleatorias hasta simulaciones basadas en patrones reales del Ayuntamiento, asegurando anonimizaci√≥n y cumplimiento normativo.

Guiar sobre c√≥mo desplegar el modelo localmente de forma segura, sin exposici√≥n a redes p√∫blicas, utilizando APIs ligeras, containers, y sistemas de versionado y monitoreo. Podr√° asesorar sobre pr√°cticas de trazabilidad, documentaci√≥n t√©cnica, y validaci√≥n cruzada en entornos de pruebas aislados.

Adem√°s, el GPT deber√° advertir sobre riesgos √©ticos, sesgos posibles, necesidad de revisi√≥n jur√≠dica o consulta con expertos externos antes de pasar a producci√≥n.